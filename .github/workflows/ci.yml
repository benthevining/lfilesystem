# ======================================================================================
#  __    ____  __  __  ____  ___
# (  )  (_  _)(  \/  )( ___)/ __)
#  )(__  _)(_  )    (  )__) \__ \
# (____)(____)(_/\/\_)(____)(___/
#
#  This file is part of the Limes open source library and is licensed under the terms of the GNU Public License.
#
#  Commercial licenses are available; contact the maintainers at ben.the.vining@gmail.com to inquire for details.
#
# ======================================================================================

name: CI

run-name: CI (${{ github.actor }})

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:

concurrency:
  group: ${{ github.workflow }}.${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

permissions:
  contents: read

jobs:

  build-and-test:

    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        preset: [clang, emscripten, gcc, iOS, tvOS, watchOS]
        shared-libs: ['ON', 'OFF']
        exclude:
        - os: windows-latest
          preset: gcc
        - os: ubuntu-latest
          preset: iOS
        - os: windows-latest
          preset: iOS
        - os: ubuntu-latest
          preset: tvOS
        - os: windows-latest
          preset: tvOS
        - os: ubuntu-latest
          preset: watchOS
        - os: windows-latest
          preset: watchOS
        include:
        - os: windows-latest
          preset: vs
          shared-libs: 'ON'
        - os: windows-latest
          preset: vs
          shared-libs: 'OFF'
        - os: macos-latest
          preset: xcode
          shared-libs: 'ON'
        - os: macos-latest
          preset: xcode
          shared-libs: 'OFF'

    runs-on: ${{ matrix.os }}

    name: Build (${{ matrix.os }}, ${{ matrix.preset }}, ${{ matrix.shared-libs }})

    timeout-minutes: 10

    steps:

    - name: Checkout code
      uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c   # pin@v3
      with:
        fetch-depth: 1

    - uses: seanmiddleditch/gha-setup-ninja@master

    - name: Set up Emscripten
      if: ${{ matrix.preset == 'emscripten' }}
      uses: mymindstorm/setup-emsdk@v11

    - name: Set Emscripten environment variable
      if: ${{ matrix.preset == 'emscripten' }}
      run: echo "EMSCRIPTEN_ROOT=$(which emcc)/.." >> $GITHUB_ENV

    - name: Configure CMake
      run: cmake --preset ${{ matrix.preset }} -D BUILD_SHARED_LIBS=${{ matrix.shared-libs }}

    - name: Run Debug build
      run: cmake --build --preset ${{ matrix.preset }} --config Debug

    - name: Run Debug tests
      if: ${{ ! ( matrix.preset == 'iOS' || matrix.preset == 'tvOS' || matrix.preset == 'watchOS' ) }}
      run: ctest --preset ${{ matrix.preset }} -C Debug

    - name: Run Release build
      run: cmake --build --preset ${{ matrix.preset }} --config Release

    - name: Run Release tests
      if: ${{ ! ( matrix.preset == 'iOS' || matrix.preset == 'tvOS' || matrix.preset == 'watchOS' ) }}
      run: ctest --preset ${{ matrix.preset }} -C Release

    - name: Generate package
      run: cpack --preset ${{ matrix.preset }} -B $GITHUB_WORKSPACE/deploy

    - name: Upload artefact
      uses: actions/upload-artifact@main
      with:
        name: ${{ matrix.os }}-${{ matrix.preset }}-${{ matrix.shared-libs }}
        path: deploy/**.zip
        if-no-files-found: error


  create-release:

    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') && github.ref == 'refs/heads/main' }}

    needs: build-and-test

    name: Create release

    runs-on: ubuntu-latest

    timeout-minutes: 20

    permissions:
      contents: write
      packages: write
      deployments: write

    steps:

    - name: Checkout code
      uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c   # pin@v3
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c   # pin@v3.6.0
      with:
        node-version: lts/*

    - name: Install NPM dependencies
      uses: bahmutov/npm-install@7b5291ae7bf768fecff627796beaf8a95c9c2bfd   # pin@v1.8.29
      with:
        useLockFile: false
        useRollingCache: true

    - name: Install dependencies
      run: pip install --upgrade bumpversion

    - name: Download artifacts
      uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a   # pin@v3
      with:
        path: ${{ github.workspace }}/deploy

    - name: Zip source code
      run: git archive --format=tar --output=source-code.tar --worktree-attributes HEAD

    - name: Run semantic release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: npx semantic-release
