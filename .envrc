# ======================================================================================
#  __    ____  __  __  ____  ___
# (  )  (_  _)(  \/  )( ___)/ __)
#  )(__  _)(_  )    (  )__) \__ \
# (____)(____)(_/\/\_)(____)(___/
#
#  This file is part of the Limes open source library and is licensed under the terms of the GNU Public License.
#
#  Commercial licenses are available; contact the maintainers at ben.the.vining@gmail.com to inquire for details.
#
# ======================================================================================

# direnv configuration file: https://direnv.net/
#
# this file exports some default environment variables for this directory
# this is useful for development, but not strictly necessary
# (we can't be too dependent on it because it's not available on Windows)
# you can add a .envrc.user and/or a .env (export statements only) file in this directory to add local settings
# those files should not be committed
# .env is loaded after .envrc.user
# your .env and .envrc.user files can override any environment variables set in this file
#
# some environment variables you may want to set for local configuration include:
#
# SKIP - comma-separated list of pre-commit hook IDs that will be skipped
# CMAKE_APPLE_SILICON_PROCESSOR - tell CMake if your Mac is an M1 (arm64) or not (x86_64)
# EMSCRIPTEN_ROOT - path to the root of the Emscripten SDK. This file attempts to locate it automatically but your .env can override it.
# ANDROID_NDK_ROOT - path to the Android NDK to use. This file attempts to locate it automatically but your .env can override it.
#
# see CMake's environment variables documentation: https://cmake.org/cmake/help/latest/manual/cmake-env-variables.7.html

strict_env
direnv_version 2.32.2

export CMAKE_GENERATOR="Ninja Multi-Config"

export CMAKE_CONFIG_TYPE=Debug

export CMAKE_COLOR_DIAGNOSTICS=ON

export CMAKE_EXPORT_COMPILE_COMMANDS=ON

export CTEST_OUTPUT_ON_FAILURE=ON
export CTEST_PROGRESS_OUTPUT=ON
export CTEST_NO_TESTS_ACTION=error

if has nproc; then
	NUM_PROCS=$(nproc --all)
elif has getconf; then
	NUM_PROCS=$(getconf _NPROCESSORS_ONLN)
else
	NUM_PROCS=$([ $(uname) = 'Darwin' ] &&
				sysctl -n hw.logicalcpu_max ||
				lscpu -p | egrep -v '^#' | wc -l
				)
fi

export CMAKE_BUILD_PARALLEL_LEVEL="$NUM_PROCS"
export CTEST_PARALLEL_LEVEL="$NUM_PROCS"

if [[ $(uname -p) == 'arm' ]]; then
	export CMAKE_APPLE_SILICON_PROCESSOR=arm64
else
	export CMAKE_APPLE_SILICON_PROCESSOR=x86_64
fi

export CMAKE_OSX_ARCHITECTURES="x86_64;arm64"
export MACOSX_DEPLOYMENT_TARGET="11.0"

export VERBOSE=ON

# in case anyone happens to be using CPM.cmake
export CPM_SOURCE_CACHE="$(pwd)/Cache"

# default to GCC (direnv doesn't support Windows, so gcc should work everywhere direnv is used)
export CC="gcc"
export CXX="g++"
export FC="gfortran"

export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

export PRE_COMMIT_COLOR=always

# check if the Emscripten SDK is installed
if has emcc; then
	# need to call asdf-which if using asdf
	# TODO: more robust check to see if emsdk is installed using ASDF?
	if has asdf; then
		EMCC_PATH=$(asdf which emcc)
	else
		EMCC_PATH=$(which emcc)
	fi

	export EMSCRIPTEN_ROOT=$(expand_path $EMCC_PATH/..)
fi

# look for Android NDK
NDK_ROOT="$HOME/Library/Android/sdk/ndk"

if [ -d "$NDK_ROOT" ]; then
	cd "$NDK_ROOT"

	MOST_RECENT_NDK=0.0

	for dir in $(find . -type d -maxdepth 1 -mindepth 1)
	do
		dir="${dir:2}" # these dir names begin with ./

		if awk 'BEGIN{exit ARGV[1]>ARGV[2]}' "$MOST_RECENT_NDK" "$dir"
		then
			MOST_RECENT_NDK="$dir"
		fi
	done

	export ANDROID_NDK_ROOT="$NDK_ROOT/$MOST_RECENT_NDK"
fi

source_env_if_exists .envrc.user
dotenv_if_exists .env
